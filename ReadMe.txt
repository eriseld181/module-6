/*
    QUERIES
    Import sample collection into a dedicated database. Perform the following queries using MongoCompass and send to the tutor the query you used and the number of records retrieved
    - Find all records with isActive equals to true
    - Find all records with age greater than 26
    - Find all records with age greater than 26 and lower or equal than 30
    - Find all records with brown or blue eyes
    - Find all records with no green eyes
    - Find all records with no green eyes nor blue
    - Find all records with company==="FITCORE" and return email only

    Students Portfolio Repo
    You should have already had created a Student Portfolio Repo for both Frontend and Backend.
    Your app will be improved by connecting it to a local MongoDB storage and enabling creation, read, update and deleting in a real database.
    
    //BACKEND
    Your previously developed backend should have the following routes included:
    
   <done> GET /students => returns the list of students
   <done> GET /students/:id => returns a single student
   <done> POST /students => create a new student
   <done> PUT /students/:id => edit the student with the given id
   <done> DELETE /students/:id => delete the student with the given id
    
    [EXTRA] POST /checkEmail => check if another student has the same email. The parameter should be passed in the body
    
    It should not be possible to add a new student if another has the same email.
    Student:
    - _id --> Autogenerated from mongo
    - name
    - surname
    - email
    - dateOfBirth
    - country
    //FRONTEND
    You should have the following features in your frontend:

    - Add a new Student ([EXTRA]use CheckEmail before sending the post to the backend)
    - Show Students on a list, with query by Country
    - Every Student could be edited or deleted
*/